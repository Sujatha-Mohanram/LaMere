{"ast":null,"code":"/*!\n  * Bootstrap config.js v5.2.2 (https://getbootstrap.com/)\n  * Copyright 2011-2022 The Bootstrap Authors (https://github.com/twbs/bootstrap/graphs/contributors)\n  * Licensed under MIT (https://github.com/twbs/bootstrap/blob/main/LICENSE)\n  */\n(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory(require('./index'), require('../dom/manipulator')) : typeof define === 'function' && define.amd ? define(['./index', '../dom/manipulator'], factory) : (global = typeof globalThis !== 'undefined' ? globalThis : global || self, global.Config = factory(global.Index, global.Manipulator));\n})(this, function (index, Manipulator) {\n  'use strict';\n\n  const _interopDefaultLegacy = e => e && typeof e === 'object' && 'default' in e ? e : {\n    default: e\n  };\n\n  const Manipulator__default = /*#__PURE__*/_interopDefaultLegacy(Manipulator);\n  /**\n   * --------------------------------------------------------------------------\n   * Bootstrap (v5.2.2): util/config.js\n   * Licensed under MIT (https://github.com/twbs/bootstrap/blob/main/LICENSE)\n   * --------------------------------------------------------------------------\n   */\n\n  /**\n   * Class definition\n   */\n\n\n  class Config {\n    // Getters\n    static get Default() {\n      return {};\n    }\n\n    static get DefaultType() {\n      return {};\n    }\n\n    static get NAME() {\n      throw new Error('You have to implement the static method \"NAME\", for each component!');\n    }\n\n    _getConfig(config) {\n      config = this._mergeConfigObj(config);\n      config = this._configAfterMerge(config);\n\n      this._typeCheckConfig(config);\n\n      return config;\n    }\n\n    _configAfterMerge(config) {\n      return config;\n    }\n\n    _mergeConfigObj(config, element) {\n      const jsonConfig = index.isElement(element) ? Manipulator__default.default.getDataAttribute(element, 'config') : {}; // try to parse\n\n      return { ...this.constructor.Default,\n        ...(typeof jsonConfig === 'object' ? jsonConfig : {}),\n        ...(index.isElement(element) ? Manipulator__default.default.getDataAttributes(element) : {}),\n        ...(typeof config === 'object' ? config : {})\n      };\n    }\n\n    _typeCheckConfig(config, configTypes = this.constructor.DefaultType) {\n      for (const property of Object.keys(configTypes)) {\n        const expectedTypes = configTypes[property];\n        const value = config[property];\n        const valueType = index.isElement(value) ? 'element' : index.toType(value);\n\n        if (!new RegExp(expectedTypes).test(valueType)) {\n          throw new TypeError(`${this.constructor.NAME.toUpperCase()}: Option \"${property}\" provided type \"${valueType}\" but expected type \"${expectedTypes}\".`);\n        }\n      }\n    }\n\n  }\n\n  return Config;\n});","map":{"version":3,"names":["global","factory","exports","module","require","define","amd","globalThis","self","Config","Index","Manipulator","index","_interopDefaultLegacy","e","default","Manipulator__default","Default","DefaultType","NAME","Error","_getConfig","config","_mergeConfigObj","_configAfterMerge","_typeCheckConfig","element","jsonConfig","isElement","getDataAttribute","constructor","getDataAttributes","configTypes","property","Object","keys","expectedTypes","value","valueType","toType","RegExp","test","TypeError","toUpperCase"],"sources":["C:/sujatha/centinneal/courses/web development/code/Project-LaMere/client/node_modules/bootstrap/js/dist/util/config.js"],"sourcesContent":["/*!\n  * Bootstrap config.js v5.2.2 (https://getbootstrap.com/)\n  * Copyright 2011-2022 The Bootstrap Authors (https://github.com/twbs/bootstrap/graphs/contributors)\n  * Licensed under MIT (https://github.com/twbs/bootstrap/blob/main/LICENSE)\n  */\n(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory(require('./index'), require('../dom/manipulator')) :\n  typeof define === 'function' && define.amd ? define(['./index', '../dom/manipulator'], factory) :\n  (global = typeof globalThis !== 'undefined' ? globalThis : global || self, global.Config = factory(global.Index, global.Manipulator));\n})(this, (function (index, Manipulator) { 'use strict';\n\n  const _interopDefaultLegacy = e => e && typeof e === 'object' && 'default' in e ? e : { default: e };\n\n  const Manipulator__default = /*#__PURE__*/_interopDefaultLegacy(Manipulator);\n\n  /**\n   * --------------------------------------------------------------------------\n   * Bootstrap (v5.2.2): util/config.js\n   * Licensed under MIT (https://github.com/twbs/bootstrap/blob/main/LICENSE)\n   * --------------------------------------------------------------------------\n   */\n  /**\n   * Class definition\n   */\n\n  class Config {\n    // Getters\n    static get Default() {\n      return {};\n    }\n\n    static get DefaultType() {\n      return {};\n    }\n\n    static get NAME() {\n      throw new Error('You have to implement the static method \"NAME\", for each component!');\n    }\n\n    _getConfig(config) {\n      config = this._mergeConfigObj(config);\n      config = this._configAfterMerge(config);\n\n      this._typeCheckConfig(config);\n\n      return config;\n    }\n\n    _configAfterMerge(config) {\n      return config;\n    }\n\n    _mergeConfigObj(config, element) {\n      const jsonConfig = index.isElement(element) ? Manipulator__default.default.getDataAttribute(element, 'config') : {}; // try to parse\n\n      return { ...this.constructor.Default,\n        ...(typeof jsonConfig === 'object' ? jsonConfig : {}),\n        ...(index.isElement(element) ? Manipulator__default.default.getDataAttributes(element) : {}),\n        ...(typeof config === 'object' ? config : {})\n      };\n    }\n\n    _typeCheckConfig(config, configTypes = this.constructor.DefaultType) {\n      for (const property of Object.keys(configTypes)) {\n        const expectedTypes = configTypes[property];\n        const value = config[property];\n        const valueType = index.isElement(value) ? 'element' : index.toType(value);\n\n        if (!new RegExp(expectedTypes).test(valueType)) {\n          throw new TypeError(`${this.constructor.NAME.toUpperCase()}: Option \"${property}\" provided type \"${valueType}\" but expected type \"${expectedTypes}\".`);\n        }\n      }\n    }\n\n  }\n\n  return Config;\n\n}));\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}